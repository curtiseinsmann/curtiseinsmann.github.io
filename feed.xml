<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.3">Jekyll</generator><link href="https://curtiseinsmann.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://curtiseinsmann.com/" rel="alternate" type="text/html" /><updated>2020-06-15T19:01:32-04:00</updated><id>https://curtiseinsmann.com/</id><title type="html">Curtis Einsmann</title><subtitle>Website and blog for Curtis Einsmann (curtiseinsmann), a software development engineer.</subtitle><author><name>Curtis Einsmann</name></author><entry><title type="html">Black Lives Matter</title><link href="https://curtiseinsmann.com/donations/black-lives-matter/" rel="alternate" type="text/html" title="Black Lives Matter" /><published>2020-06-10T09:00:00-04:00</published><updated>2020-06-10T09:00:00-04:00</updated><id>https://curtiseinsmann.com/donations/black-lives-matter</id><content type="html" xml:base="https://curtiseinsmann.com/donations/black-lives-matter/">&lt;script src=&quot;https://curtiseinsmann.com/assets/js/blm.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;My employer, Amazon, will 100% match employee contributions to the following organizations, up to $10,000 per employee. I am accepting donations through my personal Venmo or PayPal in an attempt to maximize this opportunity. I will message you the receipt after I submit your donation through an Amazon internal website.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Please submit donations by 11:59pm EST on June 30, 2020.  I will send you a receipt within 72 hours of your donation. Thanks for your donation!&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;
&lt;div id=&quot;form-surrounding-section&quot; style=&quot;padding-bottom: 20px&quot;&gt;
  &lt;div id=&quot;step-0&quot; style=&quot;height: 500px&quot;&gt;
    &lt;h2&gt;Choose your organization. Then click Next.&lt;/h2&gt;

    &lt;div style=&quot;white-space:nowrap; padding-left: 20px&quot;&gt;
      &lt;label for=&quot;all&quot;&gt;
        &lt;input type=&quot;radio&quot; id=&quot;all&quot; name=&quot;organization&quot; value=&quot;all organizations split equally&quot; onclick=&quot;updateChosenOrganization(this.value);&quot; style=&quot;display: inline&quot; /&gt;
        &lt;strong&gt;All below organizations, split equally&lt;/strong&gt;
      
      &lt;/label&gt;
    &lt;/div&gt;

    &lt;div style=&quot;white-space:nowrap; padding-left: 20px&quot;&gt;
      &lt;label for=&quot;aclu&quot;&gt;
        &lt;input type=&quot;radio&quot; id=&quot;aclu&quot; name=&quot;organization&quot; value=&quot;ACLU Foundation&quot; onclick=&quot;updateChosenOrganization(this.value);&quot; style=&quot;display: inline&quot; /&gt;
          ACLU Foundation &lt;a href=&quot;https://www.aclu.org/&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;
      
      &lt;/label&gt;
    &lt;/div&gt;

    &lt;div style=&quot;white-space:nowrap; padding-left: 20px&quot;&gt;
      &lt;label for=&quot;blm&quot;&gt;
        &lt;input type=&quot;radio&quot; id=&quot;blm&quot; name=&quot;organization&quot; value=&quot;Black Lives Matter&quot; onclick=&quot;updateChosenOrganization(this.value);&quot; style=&quot;display: inline&quot; /&gt;
        Black Lives Matter &lt;a href=&quot;https://blacklivesmatter.com/&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;
      
      &lt;/label&gt;
    &lt;/div&gt;

    &lt;div style=&quot;white-space:nowrap; padding-left: 20px&quot;&gt;
      &lt;label for=&quot;brennancenter&quot;&gt;
        &lt;input type=&quot;radio&quot; id=&quot;brennancenter&quot; name=&quot;organization&quot; value=&quot;Brennan Center for Justice&quot; onclick=&quot;updateChosenOrganization(this.value);&quot; style=&quot;display: inline&quot; /&gt;
        Brennan Center for Justice &lt;a href=&quot;https://www.brennancenter.org/&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;
      
      &lt;/label&gt;
    &lt;/div&gt;

    &lt;div style=&quot;white-space:nowrap; padding-left: 20px&quot;&gt;
      &lt;label for=&quot;eji&quot;&gt;
        &lt;input type=&quot;radio&quot; id=&quot;eji&quot; name=&quot;organization&quot; value=&quot;Equal Justice Initiative&quot; onclick=&quot;updateChosenOrganization(this.value);&quot; style=&quot;display: inline&quot; /&gt;
        Equal Justice Initiative &lt;a href=&quot;https://eji.org/&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;
      
      &lt;/label&gt;
    &lt;/div&gt;

    &lt;div style=&quot;white-space:nowrap; padding-left: 20px&quot;&gt;
      &lt;label for=&quot;lawyerscommittee&quot;&gt;
        &lt;input type=&quot;radio&quot; id=&quot;lawyerscommittee&quot; name=&quot;organization&quot; value=&quot;Lawyers’ Committee for Civil Rights Under Law&quot; onclick=&quot;updateChosenOrganization(this.value);&quot; style=&quot;display: inline&quot; /&gt;
        Lawyers’ Committee for Civil Rights Under Law &lt;a href=&quot;https://www.lawyerscommittee.org/&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;
      
      &lt;/label&gt;
    &lt;/div&gt;

    &lt;div style=&quot;white-space:nowrap; padding-left: 20px&quot;&gt;
      &lt;label for=&quot;naacp&quot;&gt;
        &lt;input type=&quot;radio&quot; id=&quot;naacp&quot; name=&quot;organization&quot; value=&quot;NAACP&quot; onclick=&quot;updateChosenOrganization(this.value);&quot; style=&quot;display: inline&quot; /&gt;
        NAACP &lt;a href=&quot;https://www.naacp.org/&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;
      
      &lt;/label&gt;
    &lt;/div&gt;

    &lt;div style=&quot;white-space:nowrap; padding-left: 20px&quot;&gt;
      &lt;label for=&quot;nationalbar&quot;&gt;
        &lt;input type=&quot;radio&quot; id=&quot;nationalbar&quot; name=&quot;organization&quot; value=&quot;National Bar Association&quot; onclick=&quot;updateChosenOrganization(this.value);&quot; style=&quot;display: inline&quot; /&gt;
        National Bar Association &lt;a href=&quot;https://www.nationalbar.org/&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;
      
      &lt;/label&gt;
    &lt;/div&gt;

    &lt;div style=&quot;white-space:nowrap; padding-left: 20px&quot;&gt;
      &lt;label for=&quot;nmaahc&quot;&gt;
        &lt;input type=&quot;radio&quot; id=&quot;nmaahc&quot; name=&quot;organization&quot; value=&quot;National Museum of African American History and Culture&quot; onclick=&quot;updateChosenOrganization(this.value);&quot; style=&quot;display: inline&quot; /&gt;
        National Museum of African American History and Culture &lt;a href=&quot;https://nmaahc.si.edu/&quot; target=&quot;_blank&quot;&gt;
          link
        &lt;/a&gt;
      
      &lt;/label&gt;
    &lt;/div&gt;

    &lt;div style=&quot;white-space:nowrap; padding-left: 20px&quot;&gt;
      &lt;label for=&quot;nul&quot;&gt;
        &lt;input type=&quot;radio&quot; id=&quot;nul&quot; name=&quot;organization&quot; value=&quot;National Urban League&quot; onclick=&quot;updateChosenOrganization(this.value);&quot; style=&quot;display: inline&quot; /&gt;
        National Urban League &lt;a href=&quot;https://nul.org/&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;
      
      &lt;/label&gt;
    &lt;/div&gt;

    &lt;div style=&quot;white-space:nowrap; padding-left: 20px&quot;&gt;
      &lt;label for=&quot;tmcf&quot;&gt;
        &lt;input type=&quot;radio&quot; id=&quot;tmcf&quot; name=&quot;organization&quot; value=&quot;Thurgood Marshall College Fund&quot; onclick=&quot;updateChosenOrganization(this.value);&quot; style=&quot;display: inline&quot; /&gt;
        Thurgood Marshall College Fund &lt;a href=&quot;https://www.tmcf.org/&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;
      
      &lt;/label&gt;
    &lt;/div&gt;

    &lt;div style=&quot;white-space:nowrap; padding-left: 20px&quot;&gt;
      &lt;label for=&quot;uncf&quot;&gt;
        &lt;input type=&quot;radio&quot; id=&quot;uncf&quot; name=&quot;organization&quot; value=&quot;UNCF (United Negro College Fund)&quot; onclick=&quot;updateChosenOrganization(this.value);&quot; style=&quot;display: inline&quot; /&gt;
        UNCF (United Negro College Fund) &lt;a href=&quot;https://uncf.org/&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;
      
      &lt;/label&gt;
    &lt;/div&gt;

    &lt;div style=&quot;white-space:nowrap; padding-left: 20px&quot;&gt;
      &lt;label for=&quot;yearup&quot;&gt;
        &lt;input type=&quot;radio&quot; id=&quot;yearup&quot; name=&quot;organization&quot; value=&quot;Year Up&quot; onclick=&quot;updateChosenOrganization(this.value);&quot; style=&quot;display: inline&quot; /&gt;
        Year Up &lt;a href=&quot;https://www.yearup.org/&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;
      
      &lt;/label&gt;
    &lt;/div&gt;
  &lt;/div&gt; &lt;!-- step-0 --&gt;

  &lt;div id=&quot;step-1&quot; style=&quot;display: none&quot;&gt;
    &lt;h2&gt;Enter your instagram or name (so I can send you a receipt). Then click Next.&lt;/h2&gt;
    &lt;input type=&quot;text&quot; id=&quot;insta-name&quot; placeholder=&quot;Instagram/Name&quot; style=&quot;width: 50%;&quot; oninput=&quot;updateInstaSlashName(this.value);&quot; /&gt;
  &lt;/div&gt;

  &lt;div id=&quot;step-2&quot; style=&quot;display: none&quot;&gt;
    &lt;h2&gt;Click &quot;Copy message to clipboard!&quot; Then click Next.&lt;/h2&gt;
    &lt;button onclick=&quot;copyPromptToClipboard();&quot;&gt;Copy message to clipboard!&lt;/button&gt; 
    &lt;span id=&quot;info-copied-span&quot; style=&quot;display: none&quot;&gt;Copied!&lt;/span&gt;

    &lt;textarea readonly=&quot;&quot; id=&quot;donation-prompt&quot; rows=&quot;2&quot; cols=&quot;50&quot;&gt;Please send my donation to (org). Please send the receipt to instagram/name (insta).&lt;/textarea&gt;
  &lt;/div&gt; &lt;!-- step-2 --&gt;

  &lt;div id=&quot;step-3&quot; style=&quot;display: none&quot;&gt;

     &lt;h2&gt;Open &lt;a href=&quot;https://venmo.com&quot; target=&quot;_blank&quot;&gt;Venmo&lt;/a&gt; and send your donation to &lt;strong&gt;@Curtis-Einsmann&lt;/strong&gt;. Use the message you've already copied to your clipboard.&lt;/h2&gt;

     &lt;h2&gt;Don't have Venmo? Use the below button to donate with PayPal. Use the message you've already copied to your clipboard, when prompted (see the screenshot). You may have to go through some annoying captcha on mobile.&lt;/h2&gt;

    &lt;form action=&quot;https://www.paypal.com/cgi-bin/webscr&quot; method=&quot;post&quot; target=&quot;_blank&quot; style=&quot;background-color: inherit&quot;&gt;
      &lt;input type=&quot;hidden&quot; name=&quot;cmd&quot; value=&quot;_donations&quot; /&gt;
      &lt;input type=&quot;hidden&quot; name=&quot;business&quot; value=&quot;6R67F98LS379E&quot; /&gt;
      &lt;input type=&quot;hidden&quot; name=&quot;item_name&quot; value=&quot;Black Lives Matter Curtis Einsmann Match&quot; /&gt;
      &lt;input type=&quot;hidden&quot; name=&quot;currency_code&quot; value=&quot;USD&quot; /&gt;
      &lt;input type=&quot;image&quot; src=&quot;https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif&quot; border=&quot;0&quot; name=&quot;submit&quot; title=&quot;Donate to Black Lives Matter Curtis Einsmann Match via PayPal&quot; alt=&quot;Donate with PayPal button&quot; style=&quot;height: 50px&quot; /&gt;
      &lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;https://www.paypal.com/en_US/i/scr/pixel.gif&quot; width=&quot;1&quot; height=&quot;1&quot; /&gt;
    &lt;/form&gt;

    &lt;img src=&quot;/assets/images/donate-paypal-blm.png&quot; style=&quot;width: 60%;&quot; /&gt;

  &lt;/div&gt; &lt;!-- step-3 --&gt;
&lt;/div&gt;
&lt;/p&gt;

&lt;div style=&quot;padding-top: 5px; padding-bottom: 5px;&quot;&gt;
&lt;button id=&quot;prev-button&quot; type=&quot;button&quot; class=&quot;btn btn-primary&quot; onclick=&quot;updateState('prev')&quot; disabled=&quot;&quot;&gt;
  Previous
&lt;/button&gt;
&lt;button id=&quot;next-button&quot; type=&quot;button&quot; class=&quot;btn btn-success&quot; onclick=&quot;updateState('next');&quot;&gt;
  Next
&lt;/button&gt;
&lt;/div&gt;</content><author><name>Curtis Einsmann</name></author><category term="blacklivesmatter" /><summary type="html"></summary></entry><entry><title type="html">Defensive Ruby Against Amazon S3’s TestEvent</title><link href="https://curtiseinsmann.com/technical/defensive-ruby-against-amazon-s3-testevent/" rel="alternate" type="text/html" title="Defensive Ruby Against Amazon S3's TestEvent" /><published>2018-06-23T09:00:00-04:00</published><updated>2018-06-23T09:00:00-04:00</updated><id>https://curtiseinsmann.com/technical/defensive-ruby-against-amazon-s3-testevent</id><content type="html" xml:base="https://curtiseinsmann.com/technical/defensive-ruby-against-amazon-s3-testevent/">&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;s3:TestEvent&lt;/code&gt; notifications from &lt;a href=&quot;https://aws.amazon.com/documentation/s3/&quot;&gt;Amazon S3&lt;/a&gt; can be pretty useful to ensure that your notifications are correctly configured.  However, there are certain instances in which a lack of defensive coding can get you into trouble.  It depends on how you’ve written code to parse your &lt;a href=&quot;https://aws.amazon.com/documentation/sns/&quot;&gt;Amazon SNS&lt;/a&gt; notifications.  In this post, we’ll do a deep dive into how we can code defensively against these kinds of anomalies in Ruby.&lt;/p&gt;

&lt;h3 id=&quot;initial-architecture&quot;&gt;Initial Architecture&lt;/h3&gt;

&lt;p&gt;Let’s consider a system with some basic AWS architecture.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/inital-aws-architecture.001.jpeg&quot; alt=&quot;Initial AWS Architecture&quot; /&gt;
&lt;em&gt;Figure 1 – processing S3 objects with key prefix foo/&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In &lt;em&gt;Figure 1&lt;/em&gt;, we’ve set up an S3 bucket, called &lt;code class=&quot;highlighter-rouge&quot;&gt;my-s3-bucket&lt;/code&gt;.  S3 supports event-driven messages to be sent whenever objects (files) are uploaded to the bucket.  These event-driven messages are called SNS topics. We’ve configured the S3 bucket to publish an SNS topic, called &lt;code class=&quot;highlighter-rouge&quot;&gt;my-foo-sns-topic&lt;/code&gt;, for any S3 object uploaded to &lt;code class=&quot;highlighter-rouge&quot;&gt;my-s3-bucket&lt;/code&gt; under the key &lt;code class=&quot;highlighter-rouge&quot;&gt;foo/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We also have an &lt;a href=&quot;https://aws.amazon.com/documentation/sqs/&quot;&gt;Amazon SQS&lt;/a&gt; queue, &lt;code class=&quot;highlighter-rouge&quot;&gt;my-sqs-queue&lt;/code&gt; which is subscribed to this SNS topic.  We’re polling this queue for messages using the &lt;a href=&quot;https://aws.amazon.com/sdk-for-ruby/&quot;&gt;AWS SDK for Ruby&lt;/a&gt; to download the file and do some processing on it.&lt;/p&gt;

&lt;p&gt;Since we’re good engineers and follow security best practices, we’ve put strict permissions on &lt;code class=&quot;highlighter-rouge&quot;&gt;my-sqs-queue&lt;/code&gt;: the SNS topic &lt;code class=&quot;highlighter-rouge&quot;&gt;my-foo-sns-topic&lt;/code&gt; is the only entity that can send messages to the queue.  Thus, we’re pretty confident that we’ll only be receiving predictable SNS JSON messages into &lt;code class=&quot;highlighter-rouge&quot;&gt;my-sqs-queue&lt;/code&gt; that look something like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Type&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Notification&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;MessageId&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;4bb76612-bdb9-59d1-bc73-35b11721b127&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;TopicArn&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;arn:aws:sns:us-east-1:123123123123:FooNotificationTopic&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Subject&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Amazon S3 Notification&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Message&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;{&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Records&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:[{&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;eventVersion&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;2.0&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;eventSource&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;aws:s3&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;awsRegion&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;us-east-1&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;eventName&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;ObjectCreated:Put&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;requestParameters&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;responseElements&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;s3&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:{&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;s3SchemaVersion&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;bucket&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:{&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;my-s3-bucket&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;ownerIdentity&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;arn&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;arn:aws:s3:::my-s3-bucket&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:{&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;foo/obj.json&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:2388}}}]}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We want to parse the above messages to get the S3 bucket and key name, so that we can download the file from S3 and do some processing on it.  Since we’re expecting a predictable message format, we’ve written our parsing code like the following:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;vi&quot;&gt;@sqs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Aws&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SQS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;region: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'us-east-1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
  &lt;span class=&quot;ss&quot;&gt;credentials: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Aws&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Credentials&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;creds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'access_key_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;creds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'secret_access_key'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;sqs_response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@sqs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;receive_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;queue_url: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;QUEUE_URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;max_number_of_messages: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;visibility_timeout: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;wait_time_seconds: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;sqs_response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqs_message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Notice the assumptions about the &lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# message format here...&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;s3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqs_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Message'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Records'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'s3'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;bucket&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'bucket'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'object'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'key'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Download the object and do some processing...&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Delete the message after we're done with it&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@sqs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;delete_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;queue_url: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;QUEUE_URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;receipt_handle: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqs_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;receipt_handle&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;adding-a-second-sns-topic&quot;&gt;Adding a second SNS Topic&lt;/h3&gt;

&lt;p&gt;Now, let’s say we want to publish an SNS topic, not only for objects under the &lt;code class=&quot;highlighter-rouge&quot;&gt;foo/&lt;/code&gt; key, but also for objects under the &lt;code class=&quot;highlighter-rouge&quot;&gt;bar/&lt;/code&gt; key.  We’re likely to make these modifications in the following order:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create a new SNS topic, called &lt;code class=&quot;highlighter-rouge&quot;&gt;my-bar-sns-topic&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Subscribe &lt;code class=&quot;highlighter-rouge&quot;&gt;my-sqs-queue&lt;/code&gt; to the new &lt;code class=&quot;highlighter-rouge&quot;&gt;my-bar-sns-topic&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Modify the S3 bucket, &lt;code class=&quot;highlighter-rouge&quot;&gt;my-s3-bucket&lt;/code&gt; to publish to &lt;code class=&quot;highlighter-rouge&quot;&gt;my-bar-sns-topic&lt;/code&gt; whenever objects are uploaded under the &lt;code class=&quot;highlighter-rouge&quot;&gt;bar/&lt;/code&gt; key&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This new architecture is depicted in &lt;em&gt;Figure 2&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/subsequent-aws-architecture.001.jpeg&quot; alt=&quot;Subsequent AWS Architecture&quot; /&gt;
&lt;em&gt;Figure 2 – Processing S3 objects with key prefixes foo/ and bar/&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Sometime after performing step 3, we notice that our Ruby code has failed, due to the following error message:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;undefined method `first' for nil:NilClass (NoMethodError)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We check the message that failed, and it looks like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Type&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Notification&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;MessageId&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;3f9f4bea-a0df-58b4-9a44-184915e7c3da&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;TopicArn&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;arn:aws:sns:us-east-1:123123123123:FooNotificationTopic&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Subject&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Amazon S3 Notification&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Message&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;{&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Service&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Amazon S3&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Event&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;s3:TestEvent&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Bucket&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;my-unique-s3-bucket-name&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;What?!&lt;/em&gt;  How did this message end up in our queue?  This isn’t the message format we’ve come to know and love…&lt;/p&gt;

&lt;h3 id=&quot;coding-against-the-s3testevent&quot;&gt;Coding against the s3:TestEvent&lt;/h3&gt;

&lt;p&gt;What we’ve come across here is the &lt;code class=&quot;highlighter-rouge&quot;&gt;s3:TestEvent&lt;/code&gt;.  It’s an SNS notification that is sent whenever the notification configuration on the S3 bucket is established.  Most of the time, this test event goes unnoticed, because upon initial creation of these resources, there usually aren’t any active processors of the messages.  You’re likely to only run into the &lt;code class=&quot;highlighter-rouge&quot;&gt;s3:TestEvent&lt;/code&gt; when making modifications on resources that are already consuming the data.&lt;/p&gt;

&lt;p&gt;As you can see from the JSON message above, the embedded JSON string for the “Message” value does not have the “Records” key.  Thus, our code fails when trying to call &lt;code class=&quot;highlighter-rouge&quot;&gt;['Records']&lt;/code&gt; on a &lt;code class=&quot;highlighter-rouge&quot;&gt;nil&lt;/code&gt; value.  We can utilize &lt;a href=&quot;https://docs.ruby-lang.org/en/2.3.0/Hash.html#method-i-fetch&quot;&gt;Ruby’s &lt;code class=&quot;highlighter-rouge&quot;&gt;fetch&lt;/code&gt; method&lt;/a&gt; to clean our code up and avoid these errors (I’ve left out the intialization and &lt;code class=&quot;highlighter-rouge&quot;&gt;receive_message&lt;/code&gt; blocks).&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;delete_sqs_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqs_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@sqs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;delete_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;queue_url: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;QUEUE_URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;receipt_handle: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqs_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;receipt_handle&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;  

&lt;span class=&quot;n&quot;&gt;sqs_response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqs_message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqs_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Message'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;delete_sqs_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqs_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;next&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;records&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Records'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;delete_sqs_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqs_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;next&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;s3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;records&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'s3'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;bucket&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'bucket'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'object'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'key'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Download the object and do some processing...&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Delete the message after we're done with it&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;delete_sqs_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqs_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It can be argued that the &lt;code class=&quot;highlighter-rouge&quot;&gt;s3:TestEvent&lt;/code&gt; is somewhat inconvenient in these situations.  However, as an engineer, it’s good to get into the habit of filtering out data that is in an unexpected format.  This is particularly the case when receiving data from any kind of external dependency, whether that dependency is SQS or any other type of resource in the cloud.   If we write our code defensively, we can protect ourselves from this, or other unexpected messages, in our SQS queue.&lt;/p&gt;</content><author><name>Curtis Einsmann</name></author><category term="ruby" /><category term="aws" /><category term="s3" /><category term="sns" /><category term="sqs" /><summary type="html">The s3:TestEvent notifications from Amazon S3 can be pretty useful to ensure that your notifications are correctly configured. However, there are certain instances in which a lack of defensive coding can get you into trouble. It depends on how you’ve written code to parse your Amazon SNS notifications. In this post, we’ll do a deep dive into how we can code defensively against these kinds of anomalies in Ruby.</summary></entry></feed>